Initial memory usage:

Partition of a set of 31810 objects. Total size = 2076756 bytes.
 Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
     0  11626  37   719364  35    719364  35 str
     1   6051  19   246104  12    965468  46 tuple
     2    333   1   170652   8   1136120  55 dict (no owner)
     3     83   0   114916   6   1251036  60 dict of module
     4   1668   5   113424   5   1364460  66 types.CodeType
     5    217   1   112748   5   1477208  71 dict of type
     6    220   1    97852   5   1575060  76 type
     7   1581   5    94860   5   1669920  80 function
     8   5899  19    70788   3   1740708  84 int
     9    127   0    68468   3   1809176  87 dict of class
<93 more rows. Type e.g. '_.more' to view.>

Creating 100 dicts with 5000 objects:
Creating 100 Cython cBinaryTrees with 5000 objects:
Creating 100 Cython cAVLTrees with 5000 objects:
Creating 100 Cython cRBTrees with 5000 objects:

Creating 100 Python BinaryTrees with 5000 objects:
Creating 100 Python AVLTrees with 5000 objects:
Creating 100 Python RBTrees with 5000 objects:

Partition of a set of 4533139 objects. Total size = 339993228 bytes.
 Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
     0 500000  11 70000000  21  70000000  21 dict of bintrees.avltree.Node
     1 500000  11 70000000  21 140000000  41 dict of bintrees.bintree.Node
     2 500000  11 70000000  21 210000000  62 dict of bintrees.rbtree.Node
     3 500000  11 24000000   7 234000000  69 bintrees.cavltree.Node
     4 500000  11 24000000   7 258000000  76 bintrees.crbtree.Node
     5 500000  11 22000000   6 280000000  82 bintrees.cbintree.Node
     6 500000  11 16000000   5 296000000  87 bintrees.avltree.Node
     7 500000  11 16000000   5 312000000  92 bintrees.bintree.Node
     8 500000  11 16000000   5 328000000  96 bintrees.rbtree.Node
     9    439   0 10015892   3 338015892  99 dict (no owner)
<111 more rows. Type e.g. '_.more' to view.>